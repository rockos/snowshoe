var counter=0;
var map = [];
var map_cur = [
           [525,180],
           [540,295],
           [520,340],
           [475,315],
           [350,265],
           [290,415],
           [260,485],
           [360,530],
           [415,560],
           [475,600],
           [700,250],
           [605,185],
           [525,180],
           ];
var maplen;

/*
 *  
 */
function createMap( callback ) {
    var len = map_cur.length;
    var lng=[],stp;

    for( var i=0; i<len-1; i++ ) {
        map.push(map_cur[i]);
        if( Math.abs(map_cur[i][0]-map_cur[i+1][0]) >= Math.abs(map_cur[i][1]-map_cur[i+1][1]) ) {
            stp = Math.abs(map_cur[i][0]-map_cur[i+1][0]) / 5;
            if( map_cur[i][0] <= map_cur[i+1][0] ) {
                lng[0] = 5;
            }else{
                lng[0] = -5;
            }
            if( !stp ) {
                lng[1] = 0;
            }else{
                if( map_cur[i][1] <= map_cur[i+1][1] ) {
                    lng[1] = Math.abs(map_cur[i][1]-map_cur[i+1][1]) / stp;
                }else{
                    lng[1] = Math.abs(map_cur[i][1]-map_cur[i+1][1]) / stp * (-1);
                }
            }
            for( var j=0; j < stp; j++ ) {
                map.push([map_cur[i][0]+(lng[0]*j),Math.round(map_cur[i][1]+(lng[1]*j))]);
            }
        }else{
            stp = Math.abs(map_cur[i][1]-map_cur[i+1][1]) / 5;
            if( map_cur[i][1] <= map_cur[i+1][1] ) {
                lng[1] = 5;
            }else{
                lng[1] = -5;
            }
            if( !stp ) {
                lng[0] = 0;
            }else{
                if( map_cur[i][0] <= map_cur[i+1][0] ) {
                    lng[0] = Math.abs(map_cur[i][0]-map_cur[i+1][0]) / stp;
                }else{
                    lng[0] = Math.abs(map_cur[i][0]-map_cur[i+1][0]) / stp * (-1);
                }
            }
            for( var j=0; j < stp; j++ ) {
                map.push([Math.round(map_cur[i][0]+(lng[0]*j)),map_cur[i][1]+(lng[1]*j)]);
            }
        }
    }
    maplen = map.length;
    callback();
}

/**
 * 作業モニタ画面へデータを送る
 *    タイマでポーリングします
 * @module showData
 * @param  none
 * @date   30/jun/2012
 */
function showData() {

    var text = String(map[counter][0]) + "," + String(map[counter][1]);
    counter++;
    if( counter >= maplen ) counter=0;

    var rand = Math.floor( Math.random() * 12 );
    if( rand === 1 ) {
        /*Error*/
        text += ",186";
        sck_io.sockets.emit('scr103_mapie', text);
        setTimeout( showData, 10000 );
        return;
    }

    text += ",0";
    sck_io.sockets.emit('scr103_mapie', text);
    setTimeout( showData, 500 );
}

/**
 * 作業モニタ デモ/main routine
 * @module mgragv.main
 * @param  none
 * @date   25/jul/2012
 */
exports.main = function() {
    lcsAp.log('--- MgrAgv background process start');
    createMap( showData );
};
